{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.css","path":"main.css","modified":1,"renderable":1},{"_id":"source/assets/image/pomelo_screenshot1.png","path":"assets/image/pomelo_screenshot1.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/fonts/default-skin.svg","path":"fonts/default-skin.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.svg","path":"fonts/tooltip.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"source/assets/image/pomelo_screenshot2.png","path":"assets/image/pomelo_screenshot2.png","modified":1,"renderable":0},{"_id":"source/assets/image/head_image.png","path":"assets/image/head_image.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/slider.js","path":"slider.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.js","path":"main.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1481187462281},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1481187462281},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1481187462282},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1481187462282},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1481187462282},{"_id":"themes/yilia/README.md","hash":"d7a420fb9b13561c84ad53faf3ee661296b5adb0","modified":1481187462283},{"_id":"themes/yilia/_config.yml","hash":"3bb824085f7eac74e397bdb310cc9132812dfd00","modified":1481187462283},{"_id":"themes/yilia/package.json","hash":"a53faf4a97607b54ea59d5268743fa85d573931f","modified":1481187462293},{"_id":"themes/yilia/webpack.config.js","hash":"cce70cea8a8954503be8f527ee2377501dbabb1c","modified":1481187462323},{"_id":"source/_posts/coffee-pc.markdown","hash":"f80b1a449320e2209993400098d6440ef3414ee3","modified":1480870280000},{"_id":"source/_posts/hello-world.markdown","hash":"0474c77dadcad8501da865cccf65ececaa09e0e4","modified":1481187462279},{"_id":"source/_posts/pomelo-libpomelo.markdown","hash":"c44a6ef42f2108674093cfe3eb011cdb00addeb9","modified":1481622625688},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1481080453738},{"_id":"themes/yilia/.git/config","hash":"316bc92d9936dc739c39161838a28fb4641cbea2","modified":1481080453740},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1481080409807},{"_id":"themes/yilia/.git/index","hash":"bc5770759c42c15418bf129eae03a81b4e9f284a","modified":1481080453779},{"_id":"themes/yilia/.git/packed-refs","hash":"ef007e7dd28acc0056f41376f4fa54d44aed9207","modified":1481080453735},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1481187462283},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1481187462284},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1481187462284},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1481187462284},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1481187462284},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1481187462284},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1481187462285},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1481187462291},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1481187462291},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1481187462291},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1481187462292},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481187462292},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481187462292},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1481187462292},{"_id":"themes/yilia/source/main.css","hash":"517ae2e8edf9df2a8a1911093df31123cfc3f9e6","modified":1481187462314},{"_id":"source/assets/image/pomelo_screenshot1.png","hash":"8e3ed7c5d6c34cd2baaf6eb069f0e858f789351b","modified":1481614764791},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1481080409807},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1481080409807},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1481080409809},{"_id":"themes/yilia/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1481080409808},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1481080409809},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1481080409809},{"_id":"themes/yilia/.git/logs/HEAD","hash":"2cfa4fcc950fc568e3ba65623226e1de2bb7a522","modified":1481080453739},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"142c68ba46c1bcb0fa3922014b35f3c2c3ac9c9c","modified":1481187462285},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1481187462286},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1481187462285},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1481187462286},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"f83a284bc5d07135e984cb8d9474419a3a99b506","modified":1481187462286},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1481187462287},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"e4b8cf08b7c03c8190b8cd7a642067f83715212f","modified":1481187462287},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1481187462287},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"1e63c86574f2b2dab3908db0c9981d3549202cd2","modified":1481187462288},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1481187462288},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"80640ca46a91e9edc7f5289240bfe250d05d9955","modified":1481187462288},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"449ab069f57fa13c295bd9c8ebb936472a602cb1","modified":1481187462290},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1481187462290},{"_id":"themes/yilia/source/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1481187462312},{"_id":"themes/yilia/source/fonts/iconfont.eot","hash":"18fe0c17d1c801b157e44588cc020043210ab04e","modified":1481187462312},{"_id":"themes/yilia/source/fonts/iconfont.svg","hash":"64a62c764b055351a4d10c691552bb59778ddf60","modified":1481187462312},{"_id":"themes/yilia/source/fonts/iconfont.ttf","hash":"68d48602cc8d56d489586ff97205e791587ac61b","modified":1481187462313},{"_id":"themes/yilia/source/fonts/iconfont.woff","hash":"f37e5cbbb2d125fa86b5936b5463ea1534694cf3","modified":1481187462313},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1481187462314},{"_id":"themes/yilia/source/fonts/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481187462313},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1481187462314},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481187462314},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1481187462293},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1481187462294},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"8a0ae8ee6af8df3f215f1cd4ecc10145a5b92cf0","modified":1481187462294},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"4115c4518cca3f5cf461018aa7a7321138d017cc","modified":1481187462294},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1481187462295},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"9069371dcc65eee63081a21e8a56a9f3dbf64c08","modified":1481187462295},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1481187462295},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"8eb9678e2f88da64436d75e5fde5c84bd52f7e17","modified":1481187462298},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"835f5c4bed0fce4d720d690c77a11ce72f6f4585","modified":1481187462298},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1481187462300},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1481187462300},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"78fae4d9ea57aa81c7cd02b1de13754b164ca32a","modified":1481187462301},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"0267e2febaef284cf319235435643232fdeee0c9","modified":1481187462301},{"_id":"themes/yilia/source-src/css/left.scss","hash":"338b6a84eed60412d0dd3d64525dbb4c8e8f6b94","modified":1481187462302},{"_id":"themes/yilia/source-src/css/main.scss","hash":"b63c0f9b3bf68efc3bcd7c816bcac6f2fb827528","modified":1481187462303},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"facd3d41bc9b2d2c6134fc0fbd379a3b0c18476b","modified":1481187462303},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d5ead4f0787e72dea76a1e2bc114edc82e744451","modified":1481187462304},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1481187462304},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1481187462304},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1481187462305},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1481187462305},{"_id":"themes/yilia/source-src/css/social.scss","hash":"920e6617c5053f09026ee512b3751f284698bf45","modified":1481187462305},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1481187462306},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ca0d8adf1a59fe6263d552b9d90b3ca351ad631b","modified":1481187462306},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"f46123cffed3d5f6db8e67d490b28f90d7c6b052","modified":1481187462306},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1481187462307},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1481187462308},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1481187462308},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1481187462308},{"_id":"themes/yilia/source-src/js/fix.js","hash":"1aa4843ea651ebd77de89052b5535bade542bb13","modified":1481187462309},{"_id":"themes/yilia/source-src/js/main.js","hash":"c16968e4607461741a7c63847af686de07f85208","modified":1481187462309},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"be13e3edaae77232503139e4f0272fb439511e3f","modified":1481187462309},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1481187462310},{"_id":"themes/yilia/source-src/js/slider.js","hash":"087f0d55469976ad5ff754dc8d57d2eb6db728a7","modified":1481187462310},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1481187462310},{"_id":"themes/yilia/source-src/js/util.js","hash":"79da46bd2a1b7ef49bfafa2e4fb8b92845f7e77e","modified":1481187462311},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"3e0fd4479a40ddbd1571c6c953df7e23637b61f5","modified":1481187462311},{"_id":"source/assets/image/pomelo_screenshot2.png","hash":"b1bf6b6a382e316065ae716299a3afd95ed2e344","modified":1481615679842},{"_id":"themes/yilia/.git/objects/pack/pack-81d328af3c7c22a847e141d906881729c7335601.idx","hash":"d2abb08d16bd7fe538179fbbafea4335533722a9","modified":1481080453702},{"_id":"themes/yilia/.git/refs/heads/master","hash":"b09bd7b885b9063060cd96be555b9e98e20f8f46","modified":1481080453739},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"7f30b4c98eee09d0af1df8164d86dcad27f9acfc","modified":1481187462288},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1481187462289},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1481187462289},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1481187462289},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"06a2dd18ac9a43fbc9a59c61e6f795f9326e9927","modified":1481187462289},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"e6edf173da77fb851fc067a481a897ad934cc4ca","modified":1481187462290},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1481187462290},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1481187462296},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"955c8978496e4e861130ca1e21c5ef803ceb6136","modified":1481187462296},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1481187462297},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1481187462297},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1481187462298},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"18fe0c17d1c801b157e44588cc020043210ab04e","modified":1481187462299},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"64a62c764b055351a4d10c691552bb59778ddf60","modified":1481187462299},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"f37e5cbbb2d125fa86b5936b5463ea1534694cf3","modified":1481187462300},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"68d48602cc8d56d489586ff97205e791587ac61b","modified":1481187462299},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1481187462302},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481187462302},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481187462302},{"_id":"source/assets/image/head_image.png","hash":"9ef123a5b2aa18fa8c24a53f933cda03b77fc588","modified":1481187462281},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"2cfa4fcc950fc568e3ba65623226e1de2bb7a522","modified":1481080453739},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1481080453737},{"_id":"themes/yilia/source/slider.js","hash":"090298b19c2794df926abb217b1eb19f8bb03d06","modified":1481187462322},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"2cfa4fcc950fc568e3ba65623226e1de2bb7a522","modified":1481080453737},{"_id":"themes/yilia/source/main.js","hash":"d863714ce553a5ae94fb2efa9843744e7e19ed3b","modified":1481187462319},{"_id":"themes/yilia/.git/objects/pack/pack-81d328af3c7c22a847e141d906881729c7335601.pack","hash":"e4a25b13bee895958beb45301d5e55fdc69b7d97","modified":1481080453704},{"_id":"public/baidusitemap.xml","hash":"1545faf84addb4dae22bc615ee4c7b9985891d1b","modified":1481623303571},{"_id":"public/atom.xml","hash":"9cc7c464ab7aeccf8da4443fac57e45a8e1ebd50","modified":1481623303916},{"_id":"public/content.json","hash":"b44ab602241e08c440ada91830c501855cccaa08","modified":1481623303918},{"_id":"public/sitemap.xml","hash":"6a0c905d7cee796a9b031447cfad4ec35bbbd0eb","modified":1481623303946},{"_id":"public/feed.json","hash":"04444396fff7d581c77657d6a6b35234c1b52e17","modified":1481623303947},{"_id":"public/archives/index.html","hash":"cf26b3d4776e8e8d8f7e0dbfb256f706cac212f3","modified":1481623303955},{"_id":"public/archives/2012/index.html","hash":"30527d25a9996d85921ec347cb9892810745a9a0","modified":1481623303955},{"_id":"public/archives/2012/12/index.html","hash":"afbce9d8aef70f60570ef95111238d6d3e029be2","modified":1481623303955},{"_id":"public/archives/2016/index.html","hash":"51d546dcf1b61168afec89f4b04fc4002676d579","modified":1481623303955},{"_id":"public/archives/2016/12/index.html","hash":"e3579810914581d5fd948e90f175635b53975d55","modified":1481623303955},{"_id":"public/tags/js/index.html","hash":"89de7604d7f2a8caba290119128f19fc4e4de475","modified":1481623303955},{"_id":"public/tags/coffeescript/index.html","hash":"4dcd7b6c5f65b97e60cd40a3c925d775a42f095e","modified":1481623303955},{"_id":"public/tags/杂谈/index.html","hash":"6f51c8991633cd9a867b1c728fd7b59f1003a8d3","modified":1481623303955},{"_id":"public/tags/pomelo/index.html","hash":"510053d8399e1376783c67900cc14623489c8a56","modified":1481623303955},{"_id":"public/2016/12/13/pomelo-libpomelo/index.html","hash":"a2ba676ae409c77796a8655ba186d76541ca7069","modified":1481623303955},{"_id":"public/2016/12/07/hello-world/index.html","hash":"dbf1fa7fbca876560fb4e89001871f1721c991c5","modified":1481623303955},{"_id":"public/2012/12/24/coffee-pc/index.html","hash":"257176bdd0f0fcac71f93ebf96bd4e7c57eeb865","modified":1481623303955},{"_id":"public/index.html","hash":"a6152139ddde94b80a61e0e93c190ecb23673b13","modified":1481623303956},{"_id":"public/assets/image/pomelo_screenshot1.png","hash":"8e3ed7c5d6c34cd2baaf6eb069f0e858f789351b","modified":1481623304029},{"_id":"public/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1481623304029},{"_id":"public/fonts/iconfont.svg","hash":"64a62c764b055351a4d10c691552bb59778ddf60","modified":1481623304031},{"_id":"public/fonts/iconfont.ttf","hash":"68d48602cc8d56d489586ff97205e791587ac61b","modified":1481623304031},{"_id":"public/fonts/iconfont.eot","hash":"18fe0c17d1c801b157e44588cc020043210ab04e","modified":1481623304031},{"_id":"public/fonts/iconfont.woff","hash":"f37e5cbbb2d125fa86b5936b5463ea1534694cf3","modified":1481623304031},{"_id":"public/fonts/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1481623304032},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1481623304032},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1481623304032},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481623304035},{"_id":"public/main.css","hash":"517ae2e8edf9df2a8a1911093df31123cfc3f9e6","modified":1481623304094},{"_id":"public/slider.js","hash":"d5ef4051a33140f217a9ab059c434970fb89ff55","modified":1481623304095},{"_id":"public/main.js","hash":"0924738d804a287c4566638828391f828c4eb9e3","modified":1481623304095},{"_id":"public/assets/image/pomelo_screenshot2.png","hash":"b1bf6b6a382e316065ae716299a3afd95ed2e344","modified":1481623304096},{"_id":"public/assets/image/head_image.png","hash":"9ef123a5b2aa18fa8c24a53f933cda03b77fc588","modified":1481623304107}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"生产者-消费者模型的coffeescript实现","date":"2012-12-24T15:51:00.000Z","comments":1,"_content":"\n这两天一直在看coffeescript相关的东西，也帮一个朋友搞了个生产者-消费者模型的C语言实现。想到还没用coffeescript真正意义上写过程序，那就尝试做一下吧。\n\n其实[《CoffeeScript小书》](http://read.douban.com/ebook/198648/)是暑假实习时就买了，一直比较向往着函数式编程却拖延了很久没行动起来。小书只有几十页，本是github上一个开源的项目，我喜欢这种轻巧的文字。语法部分看下来，再看下类与继承，只花了半天的时间，而且心情非常愉悦，然后就可以开始我菜鸟的第一次试飞了。\n\n生产者-消费者模型没什么好说的了，就是读写共享缓冲区，pv操作控制是否冲突。更多的就是冲着coffeescript来的。下面是一些凌乱但自认为有思考价值的记录，或许后续我会继续写一些coffeescript的学习笔记，再做深入的研究。\n<!-- more -->\n##**demo，可尝试点击“生产”“消费”按钮**\n<iframe src=\"/assets/demo/coffee_pc_demo/pro-con.html\" width=\"780\" height=\"336\" scrolling=\"no\"></iframe>\n##**litten如是想：**\n+ 我一定要学一门，至少一门函数式风格编程语言，没有太深远的想法，就觉得它就是我的菜       \n+ 这个程序是66行的coffeescript代码，最后编译后得到了122行的js代码，说明编程效率提升显著          \n+ 括号，方括号，花括号，还有逗号有时候会多烦人，特别是使用过ExtJs的人，而coffeescript可以没有\n+ 用法简洁的jquery在coffeescript里面会更简洁                   \n+ 关于coffeescript的循环，它不推荐你使用for循环，而是使用“推导”，暴露在底层的循环只有while语法        \n+ 事件绑定时，使用=>可以免去js上下文切换this的麻烦               \n+ coffeescript的数组迭代方法非常的酷，三言两语说不清             \n+ javascript会是下一个JVM吗？              \n+ 站在产品的角度，我认为coffeescript这名字太长了-_-!              \n\n##**附上源码**\n```coffeescript\n\tN = 10\n\n\tclass ProCon\n\t\tdata: \n\t\t\tmutex:1\n\t\t\tempty:N\n\t\t\tfull:0\n\t\t\tfront:0\n\t\t\trear:0\n\t\t\tbuf: []\n\t\tinit:->\n\t\t\ti = 0\n\t\t\twhile i<N\n\t\t\t\tnewDom = $('<div class=\"bufBox\"><div class=\"bufCover\">'+i+'</div>'+i+'</div>')\n\t\t\t\t$('#buf').append(newDom)\n\t\t\t\t@data.buf.push 'e'\n\t\t\t\ti++\n\t\t\t$('#produce').click =>\n\t\t\t\t@producer()\n\t\t\t$('#consume').click =>\n\t\t\t\t@consumer()\n\t\tp:(num)->\n\t\t\treturn --num\n\t\tv:(num)->\n\t\t\treturn ++num\n\t\tproduceItem:->\n\t\t\t$('<p class=\"desPro\">生产了产品</p>').insertBefore $(\"#des p:first\")\n\t\t\treturn 'm'\n\t\tconsumeItem:->\n\t\t\t$('<p class=\"desCon\">消费了产品</p>').insertBefore $(\"#des p:first\")\n\t\tenterItem:(item) ->\n\t\t\t@data.front = (@data.front+1)%N\n\t\t\t@data.buf[@data.front] = item;\n\t\t\tstr = \"存入产品#{@data.buf[@data.front]}到缓冲区#{@data.front}\"\n\t\t\t$(\"<p class='desPro'>#{str}</p>\").insertBefore $(\"#des p:first\")\n\t\t\t$($('.bufCover')[@data.front]).animate \n\t\t\t\t\"height\":\"50px\"\n\t\tremoveItem:->\n\t\t\t@data.rear = (@data.rear + 1) % N;\n\t\t\t@data.buf[@data.rear] = 'e';\n\t\t\tstr = \"取出产品#{@data.buf[@data.rear]}从缓冲区#{@data.rear}\"\n\t\t\t$(\"<p class='desCon'>#{str}</p>\").insertBefore $(\"#des p:first\")\n\t\t\t$($('.bufCover')[@data.rear]).animate \n\t\t\t\t\"height\":\"0px\"\n\t\tproducer:->\n\t\t\tif @data.full==N\n\t\t\t\t$(\"<p class='desSpe'>缓冲区已全满</p>\").insertBefore $(\"#des p:first\")\n\t\t\t\treturn\n\t\t\titem = @produceItem()\n\t\t\t@data.empty = @p(@data.empty)\n\t\t\t@data.mutex = @p(@data.mutex)\n\t\t\t@enterItem(item)\n\t\t\t@data.mutex = @v(@data.mutex)\n\t\t\t@data.full = @v(@data.full)\n\t\tconsumer:->\n\t\t\tif @data.empty==N\n\t\t\t\t$(\"<p class='desSpe'>缓冲区已空</p>\").insertBefore $(\"#des p:first\")\n\t\t\t\treturn\n\t\t\t@data.full = @p(@data.full)\n\t\t\t@data.mutex = @p(@data.mutex)\n\t\t\t@removeItem()\n\t\t\t@data.mutex = @v(@data.mutex)\n\t\t\t@data.empty = @v(@data.empty)\n\t\t\t@consumeItem()\n\t\t\t\n\tprocon = new ProCon\n\tprocon.init();\n```\n\n\n\n","source":"_posts/coffee-pc.markdown","raw":"---\nlayout: post\ntitle: \"生产者-消费者模型的coffeescript实现\"\ndate: 2012-12-24 23:51\ncomments: true\ntags: \n\t- js \n\t- coffeescript \n---\n\n这两天一直在看coffeescript相关的东西，也帮一个朋友搞了个生产者-消费者模型的C语言实现。想到还没用coffeescript真正意义上写过程序，那就尝试做一下吧。\n\n其实[《CoffeeScript小书》](http://read.douban.com/ebook/198648/)是暑假实习时就买了，一直比较向往着函数式编程却拖延了很久没行动起来。小书只有几十页，本是github上一个开源的项目，我喜欢这种轻巧的文字。语法部分看下来，再看下类与继承，只花了半天的时间，而且心情非常愉悦，然后就可以开始我菜鸟的第一次试飞了。\n\n生产者-消费者模型没什么好说的了，就是读写共享缓冲区，pv操作控制是否冲突。更多的就是冲着coffeescript来的。下面是一些凌乱但自认为有思考价值的记录，或许后续我会继续写一些coffeescript的学习笔记，再做深入的研究。\n<!-- more -->\n##**demo，可尝试点击“生产”“消费”按钮**\n<iframe src=\"/assets/demo/coffee_pc_demo/pro-con.html\" width=\"780\" height=\"336\" scrolling=\"no\"></iframe>\n##**litten如是想：**\n+ 我一定要学一门，至少一门函数式风格编程语言，没有太深远的想法，就觉得它就是我的菜       \n+ 这个程序是66行的coffeescript代码，最后编译后得到了122行的js代码，说明编程效率提升显著          \n+ 括号，方括号，花括号，还有逗号有时候会多烦人，特别是使用过ExtJs的人，而coffeescript可以没有\n+ 用法简洁的jquery在coffeescript里面会更简洁                   \n+ 关于coffeescript的循环，它不推荐你使用for循环，而是使用“推导”，暴露在底层的循环只有while语法        \n+ 事件绑定时，使用=>可以免去js上下文切换this的麻烦               \n+ coffeescript的数组迭代方法非常的酷，三言两语说不清             \n+ javascript会是下一个JVM吗？              \n+ 站在产品的角度，我认为coffeescript这名字太长了-_-!              \n\n##**附上源码**\n```coffeescript\n\tN = 10\n\n\tclass ProCon\n\t\tdata: \n\t\t\tmutex:1\n\t\t\tempty:N\n\t\t\tfull:0\n\t\t\tfront:0\n\t\t\trear:0\n\t\t\tbuf: []\n\t\tinit:->\n\t\t\ti = 0\n\t\t\twhile i<N\n\t\t\t\tnewDom = $('<div class=\"bufBox\"><div class=\"bufCover\">'+i+'</div>'+i+'</div>')\n\t\t\t\t$('#buf').append(newDom)\n\t\t\t\t@data.buf.push 'e'\n\t\t\t\ti++\n\t\t\t$('#produce').click =>\n\t\t\t\t@producer()\n\t\t\t$('#consume').click =>\n\t\t\t\t@consumer()\n\t\tp:(num)->\n\t\t\treturn --num\n\t\tv:(num)->\n\t\t\treturn ++num\n\t\tproduceItem:->\n\t\t\t$('<p class=\"desPro\">生产了产品</p>').insertBefore $(\"#des p:first\")\n\t\t\treturn 'm'\n\t\tconsumeItem:->\n\t\t\t$('<p class=\"desCon\">消费了产品</p>').insertBefore $(\"#des p:first\")\n\t\tenterItem:(item) ->\n\t\t\t@data.front = (@data.front+1)%N\n\t\t\t@data.buf[@data.front] = item;\n\t\t\tstr = \"存入产品#{@data.buf[@data.front]}到缓冲区#{@data.front}\"\n\t\t\t$(\"<p class='desPro'>#{str}</p>\").insertBefore $(\"#des p:first\")\n\t\t\t$($('.bufCover')[@data.front]).animate \n\t\t\t\t\"height\":\"50px\"\n\t\tremoveItem:->\n\t\t\t@data.rear = (@data.rear + 1) % N;\n\t\t\t@data.buf[@data.rear] = 'e';\n\t\t\tstr = \"取出产品#{@data.buf[@data.rear]}从缓冲区#{@data.rear}\"\n\t\t\t$(\"<p class='desCon'>#{str}</p>\").insertBefore $(\"#des p:first\")\n\t\t\t$($('.bufCover')[@data.rear]).animate \n\t\t\t\t\"height\":\"0px\"\n\t\tproducer:->\n\t\t\tif @data.full==N\n\t\t\t\t$(\"<p class='desSpe'>缓冲区已全满</p>\").insertBefore $(\"#des p:first\")\n\t\t\t\treturn\n\t\t\titem = @produceItem()\n\t\t\t@data.empty = @p(@data.empty)\n\t\t\t@data.mutex = @p(@data.mutex)\n\t\t\t@enterItem(item)\n\t\t\t@data.mutex = @v(@data.mutex)\n\t\t\t@data.full = @v(@data.full)\n\t\tconsumer:->\n\t\t\tif @data.empty==N\n\t\t\t\t$(\"<p class='desSpe'>缓冲区已空</p>\").insertBefore $(\"#des p:first\")\n\t\t\t\treturn\n\t\t\t@data.full = @p(@data.full)\n\t\t\t@data.mutex = @p(@data.mutex)\n\t\t\t@removeItem()\n\t\t\t@data.mutex = @v(@data.mutex)\n\t\t\t@data.empty = @v(@data.empty)\n\t\t\t@consumeItem()\n\t\t\t\n\tprocon = new ProCon\n\tprocon.init();\n```\n\n\n\n","slug":"coffee-pc","published":1,"updated":"2016-12-04T16:51:20.000Z","photos":[],"link":"","_id":"ciwnc9cfy0000soqxb91p41a1","content":"<p>这两天一直在看coffeescript相关的东西，也帮一个朋友搞了个生产者-消费者模型的C语言实现。想到还没用coffeescript真正意义上写过程序，那就尝试做一下吧。</p>\n<p>其实<a href=\"http://read.douban.com/ebook/198648/\" target=\"_blank\" rel=\"external\">《CoffeeScript小书》</a>是暑假实习时就买了，一直比较向往着函数式编程却拖延了很久没行动起来。小书只有几十页，本是github上一个开源的项目，我喜欢这种轻巧的文字。语法部分看下来，再看下类与继承，只花了半天的时间，而且心情非常愉悦，然后就可以开始我菜鸟的第一次试飞了。</p>\n<p>生产者-消费者模型没什么好说的了，就是读写共享缓冲区，pv操作控制是否冲突。更多的就是冲着coffeescript来的。下面是一些凌乱但自认为有思考价值的记录，或许后续我会继续写一些coffeescript的学习笔记，再做深入的研究。<br><a id=\"more\"></a></p>\n<p>##<strong>demo，可尝试点击“生产”“消费”按钮</strong></p>\n<p><iframe src=\"/assets/demo/coffee_pc_demo/pro-con.html\" width=\"780\" height=\"336\" scrolling=\"no\"></iframe></p>\n<p>##<strong>litten如是想：</strong></p>\n<ul>\n<li>我一定要学一门，至少一门函数式风格编程语言，没有太深远的想法，就觉得它就是我的菜       </li>\n<li>这个程序是66行的coffeescript代码，最后编译后得到了122行的js代码，说明编程效率提升显著          </li>\n<li>括号，方括号，花括号，还有逗号有时候会多烦人，特别是使用过ExtJs的人，而coffeescript可以没有</li>\n<li>用法简洁的jquery在coffeescript里面会更简洁                   </li>\n<li>关于coffeescript的循环，它不推荐你使用for循环，而是使用“推导”，暴露在底层的循环只有while语法        </li>\n<li>事件绑定时，使用=&gt;可以免去js上下文切换this的麻烦               </li>\n<li>coffeescript的数组迭代方法非常的酷，三言两语说不清             </li>\n<li>javascript会是下一个JVM吗？              </li>\n<li>站在产品的角度，我认为coffeescript这名字太长了-_-!              </li>\n</ul>\n<p>##<strong>附上源码</strong><br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">N = <span class=\"number\">10</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProCon</span></span></div><div class=\"line\">\tdata: </div><div class=\"line\">\t\tmutex:<span class=\"number\">1</span></div><div class=\"line\">\t\tempty:N</div><div class=\"line\">\t\tfull:<span class=\"number\">0</span></div><div class=\"line\">\t\tfront:<span class=\"number\">0</span></div><div class=\"line\">\t\trear:<span class=\"number\">0</span></div><div class=\"line\">\t\tbuf: []</div><div class=\"line\">\tinit:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\ti = <span class=\"number\">0</span></div><div class=\"line\">\t\t<span class=\"keyword\">while</span> i&lt;N</div><div class=\"line\">\t\t\tnewDom = $(<span class=\"string\">'&lt;div class=\"bufBox\"&gt;&lt;div class=\"bufCover\"&gt;'</span>+i+<span class=\"string\">'&lt;/div&gt;'</span>+i+<span class=\"string\">'&lt;/div&gt;'</span>)</div><div class=\"line\">\t\t\t$(<span class=\"string\">'#buf'</span>).append(newDom)</div><div class=\"line\">\t\t\t@data.buf.push <span class=\"string\">'e'</span></div><div class=\"line\">\t\t\ti++</div><div class=\"line\">\t\t$(<span class=\"string\">'#produce'</span>).click =&gt;</div><div class=\"line\">\t\t\t@producer()</div><div class=\"line\">\t\t$(<span class=\"string\">'#consume'</span>).click =&gt;</div><div class=\"line\">\t\t\t@consumer()</div><div class=\"line\">\tp:<span class=\"function\"><span class=\"params\">(num)</span>-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> --num</div><div class=\"line\">\tv:<span class=\"function\"><span class=\"params\">(num)</span>-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ++num</div><div class=\"line\">\tproduceItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t$(<span class=\"string\">'&lt;p class=\"desPro\"&gt;生产了产品&lt;/p&gt;'</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">'m'</span></div><div class=\"line\">\tconsumeItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t$(<span class=\"string\">'&lt;p class=\"desCon\"&gt;消费了产品&lt;/p&gt;'</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\tenterItem:<span class=\"function\"><span class=\"params\">(item)</span> -&gt;</span></div><div class=\"line\">\t\t@data.front = (@data.front+<span class=\"number\">1</span>)%N</div><div class=\"line\">\t\t@data.buf[@data.front] = item;</div><div class=\"line\">\t\tstr = <span class=\"string\">\"存入产品<span class=\"subst\">#&#123;@data.buf[@data.front]&#125;</span>到缓冲区<span class=\"subst\">#&#123;@data.front&#125;</span>\"</span></div><div class=\"line\">\t\t$(<span class=\"string\">\"&lt;p class='desPro'&gt;<span class=\"subst\">#&#123;str&#125;</span>&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t$($(<span class=\"string\">'.bufCover'</span>)[@data.front]).animate </div><div class=\"line\">\t\t\t<span class=\"string\">\"height\"</span>:<span class=\"string\">\"50px\"</span></div><div class=\"line\">\tremoveItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t@data.rear = (@data.rear + <span class=\"number\">1</span>) % N;</div><div class=\"line\">\t\t@data.buf[@data.rear] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\t\tstr = <span class=\"string\">\"取出产品<span class=\"subst\">#&#123;@data.buf[@data.rear]&#125;</span>从缓冲区<span class=\"subst\">#&#123;@data.rear&#125;</span>\"</span></div><div class=\"line\">\t\t$(<span class=\"string\">\"&lt;p class='desCon'&gt;<span class=\"subst\">#&#123;str&#125;</span>&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t$($(<span class=\"string\">'.bufCover'</span>)[@data.rear]).animate </div><div class=\"line\">\t\t\t<span class=\"string\">\"height\"</span>:<span class=\"string\">\"0px\"</span></div><div class=\"line\">\tproducer:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> @data.full==N</div><div class=\"line\">\t\t\t$(<span class=\"string\">\"&lt;p class='desSpe'&gt;缓冲区已全满&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\">\t\titem = @produceItem()</div><div class=\"line\">\t\t@data.empty = @p(@data.empty)</div><div class=\"line\">\t\t@data.mutex = @p(@data.mutex)</div><div class=\"line\">\t\t@enterItem(item)</div><div class=\"line\">\t\t@data.mutex = @v(@data.mutex)</div><div class=\"line\">\t\t@data.full = @v(@data.full)</div><div class=\"line\">\tconsumer:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> @data.empty==N</div><div class=\"line\">\t\t\t$(<span class=\"string\">\"&lt;p class='desSpe'&gt;缓冲区已空&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\">\t\t@data.full = @p(@data.full)</div><div class=\"line\">\t\t@data.mutex = @p(@data.mutex)</div><div class=\"line\">\t\t@removeItem()</div><div class=\"line\">\t\t@data.mutex = @v(@data.mutex)</div><div class=\"line\">\t\t@data.empty = @v(@data.empty)</div><div class=\"line\">\t\t@consumeItem()</div><div class=\"line\">\t\t</div><div class=\"line\">procon = <span class=\"keyword\">new</span> ProCon</div><div class=\"line\">procon.init();</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>这两天一直在看coffeescript相关的东西，也帮一个朋友搞了个生产者-消费者模型的C语言实现。想到还没用coffeescript真正意义上写过程序，那就尝试做一下吧。</p>\n<p>其实<a href=\"http://read.douban.com/ebook/198648/\">《CoffeeScript小书》</a>是暑假实习时就买了，一直比较向往着函数式编程却拖延了很久没行动起来。小书只有几十页，本是github上一个开源的项目，我喜欢这种轻巧的文字。语法部分看下来，再看下类与继承，只花了半天的时间，而且心情非常愉悦，然后就可以开始我菜鸟的第一次试飞了。</p>\n<p>生产者-消费者模型没什么好说的了，就是读写共享缓冲区，pv操作控制是否冲突。更多的就是冲着coffeescript来的。下面是一些凌乱但自认为有思考价值的记录，或许后续我会继续写一些coffeescript的学习笔记，再做深入的研究。<br>","more":"</p>\n<p>##<strong>demo，可尝试点击“生产”“消费”按钮</strong></p>\n<p><iframe src=\"/assets/demo/coffee_pc_demo/pro-con.html\" width=\"780\" height=\"336\" scrolling=\"no\"></iframe></p>\n<p>##<strong>litten如是想：</strong></p>\n<ul>\n<li>我一定要学一门，至少一门函数式风格编程语言，没有太深远的想法，就觉得它就是我的菜       </li>\n<li>这个程序是66行的coffeescript代码，最后编译后得到了122行的js代码，说明编程效率提升显著          </li>\n<li>括号，方括号，花括号，还有逗号有时候会多烦人，特别是使用过ExtJs的人，而coffeescript可以没有</li>\n<li>用法简洁的jquery在coffeescript里面会更简洁                   </li>\n<li>关于coffeescript的循环，它不推荐你使用for循环，而是使用“推导”，暴露在底层的循环只有while语法        </li>\n<li>事件绑定时，使用=&gt;可以免去js上下文切换this的麻烦               </li>\n<li>coffeescript的数组迭代方法非常的酷，三言两语说不清             </li>\n<li>javascript会是下一个JVM吗？              </li>\n<li>站在产品的角度，我认为coffeescript这名字太长了-_-!              </li>\n</ul>\n<p>##<strong>附上源码</strong><br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">N = <span class=\"number\">10</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProCon</span></span></div><div class=\"line\">\tdata: </div><div class=\"line\">\t\tmutex:<span class=\"number\">1</span></div><div class=\"line\">\t\tempty:N</div><div class=\"line\">\t\tfull:<span class=\"number\">0</span></div><div class=\"line\">\t\tfront:<span class=\"number\">0</span></div><div class=\"line\">\t\trear:<span class=\"number\">0</span></div><div class=\"line\">\t\tbuf: []</div><div class=\"line\">\tinit:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\ti = <span class=\"number\">0</span></div><div class=\"line\">\t\t<span class=\"keyword\">while</span> i&lt;N</div><div class=\"line\">\t\t\tnewDom = $(<span class=\"string\">'&lt;div class=\"bufBox\"&gt;&lt;div class=\"bufCover\"&gt;'</span>+i+<span class=\"string\">'&lt;/div&gt;'</span>+i+<span class=\"string\">'&lt;/div&gt;'</span>)</div><div class=\"line\">\t\t\t$(<span class=\"string\">'#buf'</span>).append(newDom)</div><div class=\"line\">\t\t\t@data.buf.push <span class=\"string\">'e'</span></div><div class=\"line\">\t\t\ti++</div><div class=\"line\">\t\t$(<span class=\"string\">'#produce'</span>).click =&gt;</div><div class=\"line\">\t\t\t@producer()</div><div class=\"line\">\t\t$(<span class=\"string\">'#consume'</span>).click =&gt;</div><div class=\"line\">\t\t\t@consumer()</div><div class=\"line\">\tp:<span class=\"function\"><span class=\"params\">(num)</span>-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> --num</div><div class=\"line\">\tv:<span class=\"function\"><span class=\"params\">(num)</span>-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ++num</div><div class=\"line\">\tproduceItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t$(<span class=\"string\">'&lt;p class=\"desPro\"&gt;生产了产品&lt;/p&gt;'</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">'m'</span></div><div class=\"line\">\tconsumeItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t$(<span class=\"string\">'&lt;p class=\"desCon\"&gt;消费了产品&lt;/p&gt;'</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\tenterItem:<span class=\"function\"><span class=\"params\">(item)</span> -&gt;</span></div><div class=\"line\">\t\t@data.front = (@data.front+<span class=\"number\">1</span>)%N</div><div class=\"line\">\t\t@data.buf[@data.front] = item;</div><div class=\"line\">\t\tstr = <span class=\"string\">\"存入产品<span class=\"subst\">#&#123;@data.buf[@data.front]&#125;</span>到缓冲区<span class=\"subst\">#&#123;@data.front&#125;</span>\"</span></div><div class=\"line\">\t\t$(<span class=\"string\">\"&lt;p class='desPro'&gt;<span class=\"subst\">#&#123;str&#125;</span>&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t$($(<span class=\"string\">'.bufCover'</span>)[@data.front]).animate </div><div class=\"line\">\t\t\t<span class=\"string\">\"height\"</span>:<span class=\"string\">\"50px\"</span></div><div class=\"line\">\tremoveItem:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t@data.rear = (@data.rear + <span class=\"number\">1</span>) % N;</div><div class=\"line\">\t\t@data.buf[@data.rear] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\t\tstr = <span class=\"string\">\"取出产品<span class=\"subst\">#&#123;@data.buf[@data.rear]&#125;</span>从缓冲区<span class=\"subst\">#&#123;@data.rear&#125;</span>\"</span></div><div class=\"line\">\t\t$(<span class=\"string\">\"&lt;p class='desCon'&gt;<span class=\"subst\">#&#123;str&#125;</span>&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t$($(<span class=\"string\">'.bufCover'</span>)[@data.rear]).animate </div><div class=\"line\">\t\t\t<span class=\"string\">\"height\"</span>:<span class=\"string\">\"0px\"</span></div><div class=\"line\">\tproducer:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> @data.full==N</div><div class=\"line\">\t\t\t$(<span class=\"string\">\"&lt;p class='desSpe'&gt;缓冲区已全满&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\">\t\titem = @produceItem()</div><div class=\"line\">\t\t@data.empty = @p(@data.empty)</div><div class=\"line\">\t\t@data.mutex = @p(@data.mutex)</div><div class=\"line\">\t\t@enterItem(item)</div><div class=\"line\">\t\t@data.mutex = @v(@data.mutex)</div><div class=\"line\">\t\t@data.full = @v(@data.full)</div><div class=\"line\">\tconsumer:<span class=\"function\">-&gt;</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> @data.empty==N</div><div class=\"line\">\t\t\t$(<span class=\"string\">\"&lt;p class='desSpe'&gt;缓冲区已空&lt;/p&gt;\"</span>).insertBefore $(<span class=\"string\">\"#des p:first\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\">\t\t@data.full = @p(@data.full)</div><div class=\"line\">\t\t@data.mutex = @p(@data.mutex)</div><div class=\"line\">\t\t@removeItem()</div><div class=\"line\">\t\t@data.mutex = @v(@data.mutex)</div><div class=\"line\">\t\t@data.empty = @v(@data.empty)</div><div class=\"line\">\t\t@consumeItem()</div><div class=\"line\">\t\t</div><div class=\"line\">procon = <span class=\"keyword\">new</span> ProCon</div><div class=\"line\">procon.init();</div></pre></td></tr></table></figure></p>"},{"layout":"post","title":"Hello World","date":"2016-12-07T03:54:00.000Z","comments":1,"key":"1","_content":"\n\n前前后后折腾了一天，因为网速的关系，反反复复的安装，人生第一篇博客终于诞生。\n在此感谢 ”沸沸腾“ 提供的教程http://www.jianshu.com/p/863f3f2d1733\n以及 yilia作者“litten”提供的简约主题","source":"_posts/hello-world.markdown","raw":"---\nlayout: post\ntitle: \"Hello World\"\ndate: 2016-12-7 11:54\ncomments: true\ntags: \n\t- 杂谈 \nkey: \"1\"\n---\n\n\n前前后后折腾了一天，因为网速的关系，反反复复的安装，人生第一篇博客终于诞生。\n在此感谢 ”沸沸腾“ 提供的教程http://www.jianshu.com/p/863f3f2d1733\n以及 yilia作者“litten”提供的简约主题","slug":"hello-world","published":1,"updated":"2016-12-08T08:57:42.279Z","photos":[],"link":"","_id":"ciwnc9cg80001soqx35wbf944","content":"<p>前前后后折腾了一天，因为网速的关系，反反复复的安装，人生第一篇博客终于诞生。<br>在此感谢 ”沸沸腾“ 提供的教程<a href=\"http://www.jianshu.com/p/863f3f2d1733\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/863f3f2d1733</a><br>以及 yilia作者“litten”提供的简约主题</p>\n","excerpt":"","more":"<p>前前后后折腾了一天，因为网速的关系，反反复复的安装，人生第一篇博客终于诞生。<br>在此感谢 ”沸沸腾“ 提供的教程<a href=\"http://www.jianshu.com/p/863f3f2d1733\">http://www.jianshu.com/p/863f3f2d1733</a><br>以及 yilia作者“litten”提供的简约主题</p>\n"},{"layout":"post","title":"pomelo服务器与cocos2d交互","date":"2016-12-13T06:30:00.000Z","comments":1,"reward":true,"_content":"github : https://github.com/ckj258/PomeloClient/\n\nPomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。\n非常适合用来开发轻量级手游客户端。    \n之前一直在用pomelo-cocos2dx架构，在此记录一下使用心得。  \n\n\n##运行项目\n\n### Client\n\ncoco2dx引擎版本3.10，拷贝引擎文件至根目录编译，运行  \n\n### Server\n\ncd game-server</br>\nnpm install</br>\npomelo start</br>\n\n\n<!-- more -->\n##类详解\n\n###PomeloSocket\n负责与server的交互\n主要方法\n```\n\tvoid conConnect(const char*ServerIP, int ServerPort\t);//建立连接\n\tvoid quit();\t\t\t\t\t\t\t\t\t\t  //断开连接\n\n/* ==============================================================================\n * 功能描述：发送事件,回调函数 typedef void (*pc_notify_cb_t)(const pc_notify_t* req, int rc);  rc表示错误码,无参数返回. 例用于上传游戏数据等等\n * 创 建 者：ckj\n * 创建日期：2016年12月13日17:30:49\n * ==============================================================================*/\n\tvoid sendEvents(const char* params, const char*remote, pc_notify_cb_t event_cb);\n/* ==============================================================================\n * 功能描述：发送请求,回调函数 typedef void (*pc_request_cb_t)(const pc_request_t* req, int rc, const char* resp);  rc表示错误码,resp为服务器json结构. 例用于登录等需要返回结果的场景  \n * 创 建 者：ckj\n * 创建日期：2016年12月13日17:33:53\n * ==============================================================================*/\n\tvoid sendRequest(const char* params, const char*remote, pc_request_cb_t request_cb);\n```\n\n\n###PomeloHandler\n观察者模式中的观察者，负责向游戏中注册监听的对象发放广播\n```\n\tvoid addHandlerListen(PomeloListen* listen);//添加监听listen\n```\n### PomeloListen\n观察者模式中的对象，一个纯虚类，负责接收消息\n```\n\tvirtual void handle_event(const char* msgId, const char* msgBody)=0;  //msgId为服务器notify分发的remote\n```\n\n##调用方法\n因为pomelo基于分布式游戏服务器框架，所以进入游戏时最好通过http请求获取TCP连接ip和port\n然后调用onConnect建立连接\n\n游戏中将需要注册监听的对象继承PomeloListen，重写handle_event()方法即可  \n具体示例见ChatDialog.hpp ChatDialog.cpp\n\n##效果截图\n![](/assets/image/pomelo_screenshot1.png)  \n![](/assets/image/pomelo_screenshot2.png)  \n\n\n界面粗糙，请勿见怪\n\n##platform\n\nandroid和mac自行链接对应库文件\nEND.     \n2016年12月13日17:48:50 Dantel Chen.\n\n","source":"_posts/pomelo-libpomelo.markdown","raw":"---\nlayout: post\ntitle: \"pomelo服务器与cocos2d交互\"\ndate: 2016-12-13 14:30\ncomments: true\nreward: true\ntags: \n\t- pomelo\n---\ngithub : https://github.com/ckj258/PomeloClient/\n\nPomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。\n非常适合用来开发轻量级手游客户端。    \n之前一直在用pomelo-cocos2dx架构，在此记录一下使用心得。  \n\n\n##运行项目\n\n### Client\n\ncoco2dx引擎版本3.10，拷贝引擎文件至根目录编译，运行  \n\n### Server\n\ncd game-server</br>\nnpm install</br>\npomelo start</br>\n\n\n<!-- more -->\n##类详解\n\n###PomeloSocket\n负责与server的交互\n主要方法\n```\n\tvoid conConnect(const char*ServerIP, int ServerPort\t);//建立连接\n\tvoid quit();\t\t\t\t\t\t\t\t\t\t  //断开连接\n\n/* ==============================================================================\n * 功能描述：发送事件,回调函数 typedef void (*pc_notify_cb_t)(const pc_notify_t* req, int rc);  rc表示错误码,无参数返回. 例用于上传游戏数据等等\n * 创 建 者：ckj\n * 创建日期：2016年12月13日17:30:49\n * ==============================================================================*/\n\tvoid sendEvents(const char* params, const char*remote, pc_notify_cb_t event_cb);\n/* ==============================================================================\n * 功能描述：发送请求,回调函数 typedef void (*pc_request_cb_t)(const pc_request_t* req, int rc, const char* resp);  rc表示错误码,resp为服务器json结构. 例用于登录等需要返回结果的场景  \n * 创 建 者：ckj\n * 创建日期：2016年12月13日17:33:53\n * ==============================================================================*/\n\tvoid sendRequest(const char* params, const char*remote, pc_request_cb_t request_cb);\n```\n\n\n###PomeloHandler\n观察者模式中的观察者，负责向游戏中注册监听的对象发放广播\n```\n\tvoid addHandlerListen(PomeloListen* listen);//添加监听listen\n```\n### PomeloListen\n观察者模式中的对象，一个纯虚类，负责接收消息\n```\n\tvirtual void handle_event(const char* msgId, const char* msgBody)=0;  //msgId为服务器notify分发的remote\n```\n\n##调用方法\n因为pomelo基于分布式游戏服务器框架，所以进入游戏时最好通过http请求获取TCP连接ip和port\n然后调用onConnect建立连接\n\n游戏中将需要注册监听的对象继承PomeloListen，重写handle_event()方法即可  \n具体示例见ChatDialog.hpp ChatDialog.cpp\n\n##效果截图\n![](/assets/image/pomelo_screenshot1.png)  \n![](/assets/image/pomelo_screenshot2.png)  \n\n\n界面粗糙，请勿见怪\n\n##platform\n\nandroid和mac自行链接对应库文件\nEND.     \n2016年12月13日17:48:50 Dantel Chen.\n\n","slug":"pomelo-libpomelo","published":1,"updated":"2016-12-13T09:50:25.688Z","photos":[],"link":"","_id":"ciwnc9cgv0003soqx14xn98zc","content":"<p>github : <a href=\"https://github.com/ckj258/PomeloClient/\" target=\"_blank\" rel=\"external\">https://github.com/ckj258/PomeloClient/</a></p>\n<p>Pomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。<br>非常适合用来开发轻量级手游客户端。<br>之前一直在用pomelo-cocos2dx架构，在此记录一下使用心得。  </p>\n<p>##运行项目</p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p>coco2dx引擎版本3.10，拷贝引擎文件至根目录编译，运行  </p>\n<h3 id=\"Server\"><a href=\"#Server\" class=\"headerlink\" title=\"Server\"></a>Server</h3><p>cd game-server<br><br>npm install<br><br>pomelo start<br></p>\n<a id=\"more\"></a>\n<p>##类详解</p>\n<p>###PomeloSocket<br>负责与server的交互<br>主要方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tvoid conConnect(const char*ServerIP, int ServerPort\t);//建立连接</div><div class=\"line\">\tvoid quit();\t\t\t\t\t\t\t\t\t\t  //断开连接</div><div class=\"line\"></div><div class=\"line\">/* ==============================================================================</div><div class=\"line\"> * 功能描述：发送事件,回调函数 typedef void (*pc_notify_cb_t)(const pc_notify_t* req, int rc);  rc表示错误码,无参数返回. 例用于上传游戏数据等等</div><div class=\"line\"> * 创 建 者：ckj</div><div class=\"line\"> * 创建日期：2016年12月13日17:30:49</div><div class=\"line\"> * ==============================================================================*/</div><div class=\"line\">\tvoid sendEvents(const char* params, const char*remote, pc_notify_cb_t event_cb);</div><div class=\"line\">/* ==============================================================================</div><div class=\"line\"> * 功能描述：发送请求,回调函数 typedef void (*pc_request_cb_t)(const pc_request_t* req, int rc, const char* resp);  rc表示错误码,resp为服务器json结构. 例用于登录等需要返回结果的场景  </div><div class=\"line\"> * 创 建 者：ckj</div><div class=\"line\"> * 创建日期：2016年12月13日17:33:53</div><div class=\"line\"> * ==============================================================================*/</div><div class=\"line\">\tvoid sendRequest(const char* params, const char*remote, pc_request_cb_t request_cb);</div></pre></td></tr></table></figure></p>\n<p>###PomeloHandler<br>观察者模式中的观察者，负责向游戏中注册监听的对象发放广播<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void addHandlerListen(PomeloListen* listen);//添加监听listen</div></pre></td></tr></table></figure></p>\n<h3 id=\"PomeloListen\"><a href=\"#PomeloListen\" class=\"headerlink\" title=\"PomeloListen\"></a>PomeloListen</h3><p>观察者模式中的对象，一个纯虚类，负责接收消息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtual void handle_event(const char* msgId, const char* msgBody)=0;  //msgId为服务器notify分发的remote</div></pre></td></tr></table></figure></p>\n<p>##调用方法<br>因为pomelo基于分布式游戏服务器框架，所以进入游戏时最好通过http请求获取TCP连接ip和port<br>然后调用onConnect建立连接</p>\n<p>游戏中将需要注册监听的对象继承PomeloListen，重写handle_event()方法即可<br>具体示例见ChatDialog.hpp ChatDialog.cpp</p>\n<p>##效果截图<br><img src=\"/assets/image/pomelo_screenshot1.png\" alt=\"\"><br><img src=\"/assets/image/pomelo_screenshot2.png\" alt=\"\">  </p>\n<p>界面粗糙，请勿见怪</p>\n<p>##platform</p>\n<p>android和mac自行链接对应库文件<br>END.<br>2016年12月13日17:48:50 Dantel Chen.</p>\n","excerpt":"<p>github : <a href=\"https://github.com/ckj258/PomeloClient/\">https://github.com/ckj258/PomeloClient/</a></p>\n<p>Pomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。<br>非常适合用来开发轻量级手游客户端。<br>之前一直在用pomelo-cocos2dx架构，在此记录一下使用心得。  </p>\n<p>##运行项目</p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p>coco2dx引擎版本3.10，拷贝引擎文件至根目录编译，运行  </p>\n<h3 id=\"Server\"><a href=\"#Server\" class=\"headerlink\" title=\"Server\"></a>Server</h3><p>cd game-server</br><br>npm install</br><br>pomelo start</br></p>","more":"<p>##类详解</p>\n<p>###PomeloSocket<br>负责与server的交互<br>主要方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tvoid conConnect(const char*ServerIP, int ServerPort\t);//建立连接</div><div class=\"line\">\tvoid quit();\t\t\t\t\t\t\t\t\t\t  //断开连接</div><div class=\"line\"></div><div class=\"line\">/* ==============================================================================</div><div class=\"line\"> * 功能描述：发送事件,回调函数 typedef void (*pc_notify_cb_t)(const pc_notify_t* req, int rc);  rc表示错误码,无参数返回. 例用于上传游戏数据等等</div><div class=\"line\"> * 创 建 者：ckj</div><div class=\"line\"> * 创建日期：2016年12月13日17:30:49</div><div class=\"line\"> * ==============================================================================*/</div><div class=\"line\">\tvoid sendEvents(const char* params, const char*remote, pc_notify_cb_t event_cb);</div><div class=\"line\">/* ==============================================================================</div><div class=\"line\"> * 功能描述：发送请求,回调函数 typedef void (*pc_request_cb_t)(const pc_request_t* req, int rc, const char* resp);  rc表示错误码,resp为服务器json结构. 例用于登录等需要返回结果的场景  </div><div class=\"line\"> * 创 建 者：ckj</div><div class=\"line\"> * 创建日期：2016年12月13日17:33:53</div><div class=\"line\"> * ==============================================================================*/</div><div class=\"line\">\tvoid sendRequest(const char* params, const char*remote, pc_request_cb_t request_cb);</div></pre></td></tr></table></figure></p>\n<p>###PomeloHandler<br>观察者模式中的观察者，负责向游戏中注册监听的对象发放广播<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">void addHandlerListen(PomeloListen* listen);//添加监听listen</div></pre></td></tr></table></figure></p>\n<h3 id=\"PomeloListen\"><a href=\"#PomeloListen\" class=\"headerlink\" title=\"PomeloListen\"></a>PomeloListen</h3><p>观察者模式中的对象，一个纯虚类，负责接收消息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtual void handle_event(const char* msgId, const char* msgBody)=0;  //msgId为服务器notify分发的remote</div></pre></td></tr></table></figure></p>\n<p>##调用方法<br>因为pomelo基于分布式游戏服务器框架，所以进入游戏时最好通过http请求获取TCP连接ip和port<br>然后调用onConnect建立连接</p>\n<p>游戏中将需要注册监听的对象继承PomeloListen，重写handle_event()方法即可<br>具体示例见ChatDialog.hpp ChatDialog.cpp</p>\n<p>##效果截图<br><img src=\"/assets/image/pomelo_screenshot1.png\" alt=\"\"><br><img src=\"/assets/image/pomelo_screenshot2.png\" alt=\"\">  </p>\n<p>界面粗糙，请勿见怪</p>\n<p>##platform</p>\n<p>android和mac自行链接对应库文件<br>END.<br>2016年12月13日17:48:50 Dantel Chen.</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciwnc9cfy0000soqxb91p41a1","tag_id":"ciwnc9cgl0002soqx63b95htj","_id":"ciwnc9ch80006soqx6z45hygk"},{"post_id":"ciwnc9cfy0000soqxb91p41a1","tag_id":"ciwnc9ch50004soqxet3bddv6","_id":"ciwnc9ch90007soqxle5sj101"},{"post_id":"ciwnc9cg80001soqx35wbf944","tag_id":"ciwnc9ch70005soqxl73z9z9j","_id":"ciwnc9cha0009soqxq7wspdvx"},{"post_id":"ciwnc9cgv0003soqx14xn98zc","tag_id":"ciwnc9ch90008soqxwlh5iytt","_id":"ciwnc9chb000asoqx4ud6w3d1"}],"Tag":[{"name":"js","_id":"ciwnc9cgl0002soqx63b95htj"},{"name":"coffeescript","_id":"ciwnc9ch50004soqxet3bddv6"},{"name":"杂谈","_id":"ciwnc9ch70005soqxl73z9z9j"},{"name":"pomelo","_id":"ciwnc9ch90008soqxwlh5iytt"}]}}