[{"title":"pomelo学习入门笔记","date":"2016-12-20T08:55:19.000Z","path":"2016/12/20/pomelo-chatserver/","text":"github : https://github.com/ckj258/PomeloClient/game-server 前言pomelo是一个游戏服务器框架，使用很简单。它包括基础开发框架和一系列相关工具和库，可以帮助开发者省去游戏开发中枯燥的重复劳动和底层逻辑工作，让开发者可以更多地去关注游戏的具体逻辑，大大提高开发效率。 项目结构../app/： 存放游戏逻辑脚本../config/: 存放配置文件../logs/: 存放历史日志../node_modules/: 存放用到的npm包../app.js： pomelo入口../package.json: npm包配置文件 运行架构 代码架构app.js中声明了”connector”,”gate”,”chat”服务器服务器配置信息在config目录下，servers.json配置具体的应用服务器信息。在配置文件中，分为development和production两种环境，表示开发环境和产品环境1234567891011121314151617181920212223242526app.configure(&apos;production|development&apos;, &apos;connector&apos;, function()&#123; app.set(&apos;connectorConfig&apos;, &#123; connector : pomelo.connectors.hybridconnector, heartbeat : 3, useDict : true, useProtobuf : true &#125;);&#125;);app.configure(&apos;production|development&apos;, &apos;gate&apos;, function()&#123; app.set(&apos;connectorConfig&apos;, &#123; connector : pomelo.connectors.hybridconnector, useProtobuf : true &#125;);&#125;);// app configureapp.configure(&apos;production|development&apos;, function() &#123; // route configures app.route(&apos;chat&apos;, routeUtil.chat); // filter configures app.filter(pomelo.timeout());&#125;); “chat”服务器../servers/chat目录下包含hander和remote两个文件夹，其中hander下主要存放监听器，负责接收客户端发送请求做相应处理 12345678910111213141516171819202122232425262728handler.send = function(msg, session, next) &#123; var rid = session.get(&apos;rid&apos;); var username = session.uid.split(&apos;*&apos;)[0]; var channelService = this.app.get(&apos;channelService&apos;); var param = &#123; msg: msg.content, from: username, target: msg.target &#125;; channel = channelService.getChannel(rid, false); //the target is all users if(msg.target == &apos;*&apos;) &#123; channel.pushMessage(&apos;onChat&apos;, param); &#125; //the target is specific user else &#123; var tuid = msg.target + &apos;*&apos; + rid; var tsid = channel.getMember(tuid)[&apos;sid&apos;]; channelService.pushMessageByUids(&apos;onChat&apos;, param, [&#123; uid: tuid, sid: tsid &#125;]); &#125; next(null, &#123; route: msg.route &#125;);&#125;; send方法主要功能是接收客户端发送的聊天信息，并广播给同channel下玩家，回调函数next()返回客户端错误码 至于remote，当有客户端连接到connector上后，connector会向chat.remote发起远程过程调用，chat.remote会将登录的用户，加到对应的channel中","tags":[{"name":"pomelo","slug":"pomelo","permalink":"http://yoursite.com/tags/pomelo/"}]},{"title":"pomelo服务器与cocos2d交互","date":"2016-12-13T06:30:00.000Z","path":"2016/12/13/pomelo-libpomelo/","text":"github : https://github.com/ckj258/PomeloClient/ Pomelo 是基于 Node.js 的高性能、分布式游戏服务器框架。非常适合用来开发轻量级手游。之前一直在用pomelo-cocos2dx架构，在此记录一下使用心得。 运行项目Clientcoco2dx引擎版本3.10，拷贝引擎文件至根目录编译，运行 Servercd game-servernpm installpomelo start 类详解PomeloSocket负责与server的交互主要方法123456789101112131415 void conConnect(const char*ServerIP, int ServerPort );//建立连接 void quit(); //断开连接/* ============================================================================== * 功能描述：发送事件,回调函数 typedef void (*pc_notify_cb_t)(const pc_notify_t* req, int rc); rc表示错误码,无参数返回. 例用于上传游戏数据等等 * 创 建 者：ckj * 创建日期：2016年12月13日17:30:49 * ==============================================================================*/ void sendEvents(const char* params, const char*remote, pc_notify_cb_t event_cb);/* ============================================================================== * 功能描述：发送请求,回调函数 typedef void (*pc_request_cb_t)(const pc_request_t* req, int rc, const char* resp); rc表示错误码,resp为服务器json结构. 例用于登录等需要返回结果的场景 * 创 建 者：ckj * 创建日期：2016年12月13日17:33:53 * ==============================================================================*/ void sendRequest(const char* params, const char*remote, pc_request_cb_t request_cb); PomeloHandler观察者模式中的观察者，负责向游戏中注册监听的对象发放广播1void addHandlerListen(PomeloListen* listen);//添加监听listen PomeloListen观察者模式中的对象，一个纯虚类，负责接收消息1virtual void handle_event(const char* msgId, const char* msgBody)=0; //msgId为服务器notify分发的remote 调用方法因为pomelo基于分布式游戏服务器框架，所以进入游戏时最好通过http请求获取TCP连接ip和port然后调用onConnect建立连接 游戏中将需要注册监听的对象继承PomeloListen，重写handle_event()方法即可具体示例见ChatDialog.hpp ChatDialog.cpp 效果截图 界面粗糙，请勿见怪 platformandroid和mac自行链接对应库文件","tags":[{"name":"pomelo","slug":"pomelo","permalink":"http://yoursite.com/tags/pomelo/"}]},{"title":"Hello World","date":"2016-12-07T03:54:00.000Z","path":"2016/12/07/hello-world/","text":"前前后后折腾了一天，因为网速的关系，反反复复的安装，人生第一篇博客终于诞生。在此感谢 ”沸沸腾“ 提供的教程http://www.jianshu.com/p/863f3f2d1733以及 yilia作者“litten”提供的简约主题","tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://yoursite.com/tags/杂谈/"}]}]